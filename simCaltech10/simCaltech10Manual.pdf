%PDF-1.2 
%‚„œ”
 
10 0 obj
<<
/Length 11 0 R
>>
stream
BT187.44 506.52  TD0 0 0 rg /F0 36  Tf-0.006  Tc 0.006  Tw (Caltech10 CPU) Tj41.52 -82.8  TD -0.0053  Tc 0  Tw (Simulator) Tj-35.52 -82.8  TD -0  Tc 0  Tw (User's Manual) Tj76.92 -63.84  TD /F1 15.96  Tf0.0144  Tc -0.0444  Tw (version 1.0) TjETendstream
endobj
11 0 obj
254
endobj
4 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
/F1 8 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 10 0 R
>>
endobj
12 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/ProcSet 2 0 R
>>
>>
endobj
16 0 obj
<<
/Length 17 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj418.68 0  TD 0.0165  Tc 0  Tw (Introduction) Tj-210.96 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (1) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-218.52 573.36  TD 0.03  Tc 0  Tw (.) Tj194.4 -17.16  TD /F2 15.96  Tf0.0245  Tc (Introduction) Tj-194.4 -70.32  TD /F2 9.96  Tf0.0067  Tc 0.0516  Tw (The simulator is a program that simulates a given microprocessor and supplies the user with a convenient command) Tj0 -11.52  TD 0.0068  Tc 0.0373  Tw (interface for testing and debugging programs.  This command interface consists of a number of one and two) Tj0 -11.4  TD 0.0136  Tc 0.0235  Tw (keystroke commands.  With these commands the user can run or single step their program, examine and modify) Tj0 -11.52  TD 0.0038  Tc 0.0862  Tw (simulator memory, and manipulate breakpoints.) Tj0 -23.04  TD 0.0104  Tc 0.0337  Tw (Throughout the manual, characters enclosed in angle brackets \('<' and '>'\) indicate a single keystroke.  For example,) Tj0 -11.52  TD 0.0093  Tc 0.0274  Tw ('<ESC>' indicates the key labeled ESC on the terminal.  Also, '<CR>' indicates a carriage return \(Enter key\) and) Tj0 -11.4  TD 0.0127  Tc 0.0173  Tw ('<LF>' a linefeed.) Tj0 -23.04  TD 0.0088  Tc 0.0345  Tw (To run the simulator type simCaltech10 in response to the system prompt.  The simulator will return with its) Tj0 -11.52  TD 0.0053  Tc 0.059  Tw (identifying message and will then wait for a command.  Note that the simulator has no prompt.  To exit the simulator) TjT* 0.0082  Tc 0.0323  Tw (a 'Q' may be used at any time.  While a program is running on the simulator a <CTRL/C> may be used to suspend) TjT* 0.0082  Tc 0.0389  Tw (program execution and return control to the user.) TjETendstream
endobj
17 0 obj
1814
endobj
13 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F2 14 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 16 0 R
>>
endobj
19 0 obj
<<
/Length 20 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0278  Tc 0  Tw (Commands) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-156.36 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (2) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-21 556.2  TD /F2 15.96  Tf0.0158  Tc 0  Tw (Commands) Tj-197.52 -70.32  TD /F2 9.96  Tf0.0085  Tc 0.0415  Tw (As previously mentioned, most simulator commands are single characters.  This is done to allow the user to use) Tj0 -11.52  TD 0.0082  Tc 0.0218  Tw (auto-repeat to do continuous or repetitive testing.) Tj0 -22.92  TD 0.013  Tc 0.017  Tw (Most commands take a numeric ) Tj130.2 0  TD 0.014  Tc 0.0269  Tw (argument which is typed before the command. This argument is always in) Tj-130.2 -11.52  TD 0.0102  Tc 0.0339  Tw (hexadecimal and therefore will consist of the characters 0 through 9 and A through F.  Those ) Tj374.4 0  TD -0.0054  Tc 0.0954  Tw (commands which take) Tj-374.4 -11.52  TD 0.008  Tc 0.04  Tw (a word argument \(four hex digits\) will use only the last four digits typed and ignore all preceding digits.  For) Tj0 -11.52  TD 0.0109  Tc 0.0318  Tw (example, if '123456' is typed as a word argument, 3456 will actually be used as the argument.  Those commands) Tj0 -11.4  TD 0.0075  Tc 0.0409  Tw (which take a byte argument will only use the last two digits typed \() Tj268.56 0  TD /F1 9.96  Tf-0.0089  Tc 0  Tw (i) Tj2.76 0  TD /F2 9.96  Tf0.03  Tc (.) Tj2.52 0  TD /F1 9.96  Tf0.0178  Tc (e) Tj4.44 0  TD /F2 9.96  Tf0.0103  Tc 0.033  Tw (. 56 in the previous example\).  If not enough) Tj-278.28 -11.52  TD 0.0083  Tc 0.0377  Tw (digits are supplied for a command the number is padded on the left with zeros \() Tj317.4 0  TD /F1 9.96  Tf-0.0089  Tc 0  Tw (i) Tj2.76 0  TD /F2 9.96  Tf0.03  Tc (.) Tj2.52 0  TD /F1 9.96  Tf0.0178  Tc (e) Tj4.44 0  TD /F2 9.96  Tf0.0174  Tc 0.0366  Tw (. for a word argument '123') Tj-327.12 -11.52  TD 0.0289  Tc -0.0589  Tw (becomes 0123\).  Those ) Tj95.28 0  TD 0.0096  Tc 0.0404  Tw (commands which take no arguments simply ignore all digits preceding them.  Beware,) Tj-95.28 -11.52  TD 0.011  Tc 0.026  Tw (however, that some commands act differently depending on whether they are given an argument or not \(register and) Tj0 -11.52  TD 0.008  Tc 0.062  Tw (breakpoint commands for example\).) Tj0 -22.92  TD -0.0192  Tc -0.1908  Tw (Many ) Tj25.68 0  TD 0.0113  Tc 0.032  Tw (commands which take arguments also have a default argument which is used if no argument is supplied.  The) Tj-25.68 -11.52  TD 0.0102  Tc 0.0324  Tw (defaults are chosen to facilitate the use of auto-repeat.  For example, the default location for a deposit instruction is) Tj0 -11.52  TD 0.0105  Tc 0.0258  Tw (the last location examined.  Whenever an argument is supplied for a command the default value for that command is) TjT* 0.0108  Tc 0.0312  Tw (changed to the supplied value.  Notice too, that similar sets of commands use the same default values.  There are) TjT* 0.0064  Tc 0.0386  Tw (four defaults used by the simulator.  They are:) Tj59.4 -23.52  TD 0.0014  Tc 0  Tw (Default) Tj81 0  TD 0.0216  Tc (Descripton) TjET125.76 307.2 0.48 0.48 re f125.76 307.2 0.48 0.48 re f126.24 307.2 80.52 0.48 re f206.76 307.2 0.48 0.48 re f207.24 307.2 206.52 0.48 re f413.76 307.2 0.48 0.48 re f413.76 307.2 0.48 0.48 re f125.76 295.68 0.48 11.52 re f206.76 295.68 0.48 11.52 re f413.76 295.68 0.48 11.52 re fBT131.4 285.96  TD/F3 9.96  Tf-0.0025  Tc (FILL) Tj81 0.24  TD /F2 9.96  Tf0.0131  Tc 0.0409  Tw (the last value deposited to memory) TjET125.76 295.2 0.48 0.48 re f126.24 295.2 80.52 0.48 re f206.76 295.2 0.48 0.48 re f207.24 295.2 206.52 0.48 re f413.76 295.2 0.48 0.48 re f125.76 283.68 0.48 11.52 re f206.76 283.68 0.48 11.52 re f413.76 283.68 0.48 11.52 re fBT131.4 273.96  TD/F3 9.96  Tf0.0141  Tc 0  Tw (LOC) Tj81 0.24  TD /F2 9.96  Tf0.0063  Tc 0.0537  Tw (the last memory location examined) TjET125.76 283.2 0.48 0.48 re f126.24 283.2 80.52 0.48 re f206.76 283.2 0.48 0.48 re f207.24 283.2 206.52 0.48 re f413.76 283.2 0.48 0.48 re f125.76 271.68 0.48 11.52 re f206.76 271.68 0.48 11.52 re f413.76 271.68 0.48 11.52 re fBT131.4 261.96  TD/F3 9.96  Tf-0.0172  Tc 0  Tw (PC) Tj81 0.24  TD /F2 9.96  Tf0.0201  Tc 0.0099  Tw (the current PC) TjET125.76 271.2 0.48 0.48 re f126.24 271.2 80.52 0.48 re f206.76 271.2 0.48 0.48 re f207.24 271.2 206.52 0.48 re f413.76 271.2 0.48 0.48 re f125.76 259.68 0.48 11.52 re f206.76 259.68 0.48 11.52 re f413.76 259.68 0.48 11.52 re fBT131.4 249.96  TD/F3 9.96  Tf0.0222  Tc 0  Tw (START) Tj81 0.24  TD /F2 9.96  Tf0.0131  Tc 0.0169  Tw (the last address supplied for starting execution) TjET125.76 259.2 0.48 0.48 re f126.24 259.2 80.52 0.48 re f206.76 259.2 0.48 0.48 re f207.24 259.2 206.52 0.48 re f413.76 259.2 0.48 0.48 re f125.76 247.68 0.48 11.52 re f125.76 247.2 0.48 0.48 re f125.76 247.2 0.48 0.48 re f126.24 247.2 80.52 0.48 re f206.76 247.68 0.48 11.52 re f206.76 247.2 0.48 0.48 re f207.24 247.2 206.52 0.48 re f413.76 247.68 0.48 11.52 re f413.76 247.2 0.48 0.48 re f413.76 247.2 0.48 0.48 re fBT72 226.8  TD0.0129  Tc 0.0114  Tw (The character '*' is used by the simulator as shorthand for the current contents of the program counter \(PC\).  This is) Tj0 -11.52  TD 0.0051  Tc 0.0477  Tw (analogous to the meaning given '*' by many assemblers.  The asterisk may be given as an argument at any time and) TjT* 0.0068  Tc 0.0382  Tw (is equivalent to having typed the value of the PC.  When '*' is typed the value of the PC will be echoed.  The) TjT* 0.0079  Tc 0.0336  Tw (following examples will illustrate this.  If '*' is input and the PC contains 3456, '*3456' will appear on the screen and) TjT* 0.0074  Tc 0.0346  Tw (3456 will be used as the argument to any command now typed.  Since typing '*' is equivalent to entering the) Tj0 -11.4  TD 0.0086  Tc 0.0319  Tw (contents of the PC by hand, typing '*' then '78' will echo as '*345678' and 5678 will be used as the argument to a) Tj0 -11.52  TD 0.0136  Tc 0.0164  Tw (subsequent command.) Tj0 -23.04  TD 0.0111  Tc 0.0264  Tw (The simulator has five sets of related commands.  These are: examine and deposit commands, register commands,) Tj0 -11.52  TD 0.0176  Tc 0.0124  Tw (execution commands, breakpoint commands) Tj178.2 0  TD 0.0122  Tc 0.0287  Tw (,  and miscellaneous commands.  The simulator error message is a) Tj-178.2 -11.52  TD 0.0077  Tc 0.0394  Tw (question mark \('?'\) followed by a beep.  Any command error will cause this message to be output.  Some errors will) Tj0 -11.4  TD 0.0086  Tc 0.0386  Tw (also cause further explanatory information to be output.) Tj0 -23.28  TD 0.0115  Tc 0.0256  Tw (Following is a description of all of the simulator's commands by command type.  Throughout these descriptions ") Tj454.2 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0163  Tc (") Tj-460.2 -12.12  TD 0.0127  Tc 0.0173  Tw (represents a hexadecimal number entered by the user.  All numbers in the examples are, of course, in hexadecimal.) Tj0 -11.52  TD 0.013  Tc 0.017  Tw (In these examples the computer response is italicized.) TjETendstream
endobj
20 0 obj
7238
endobj
18 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F1 8 0 R 
/F2 14 0 R 
/F3 21 0 R 
/F4 23 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 19 0 R
>>
endobj
26 0 obj
<<
/Length 27 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj422.52 0  TD 0.0278  Tc 0  Tw (Commands) Tj-214.8 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (3) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-218.52 663.48  TD /F2 12  Tf0.0019  Tc -0.0019  Tw (Examine and Deposit Commands) Tj21.6 -30  TD /F2 9.96  Tf0.0058  Tc 0.0528  Tw (Only an open memory location may be deposited to.  If a memory location is not open an error message will be) Tj0 -11.52  TD 0.0017  Tc 0.0283  Tw (output.  ) Tj33.12 0  TD 0.0082  Tc 0.0285  Tw (A location is opened only if it has just been examined, otherwise it is closed.  The only command) Tj-33.12 -11.4  TD 0.011  Tc 0.0316  Tw (which just opens a memory location is the '/' command \(this also examines it\).  Some of the deposit commands) Tj0 -11.52  TD 0.0019  Tc 0.0641  Tw (also open memory locations after depositing to memory.  Any ) Tj250.68 0  TD 0.0178  Tc 0.0522  Tw (command which does not examine a memory) Tj-250.68 -11.52  TD 0.0061  Tc 0.0572  Tw (location closes any open memory location.  The only time a memory location will be opened without using an) Tj0 -11.52  TD 0.0062  Tc 0.0428  Tw (examine or deposit command is after a trace \('T' or 'X'\) command when the memory location pointed to by the) TjT* 0.0102  Tc 0.0198  Tw (PC is opened.  Below are ) Tj103.56 0  TD 0.0097  Tc 0.0203  Tw (the examine and deposit commands.) Tj-103.56 -23.16  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0089  Tc (/) Tj37.2 0  TD 0.0052  Tc 0.0248  Tw (Open and examine the ) Tj92.04 0  TD 0.0108  Tc 0.0192  Tw (contents of memory location ) Tj117.24 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0139  Tc 0.0161  Tw ( \(word\).  If not specified ) Tj100.32 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0009  Tc 0.0309  Tw ( defaults to LOC,) Tj-321.6 -12.36  TD 0.0067  Tc 0.0233  Tw (else LOC is set to ) Tj73.56 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0081  Tc 0.0496  Tw (.  If the current memory space being accessed is program memory, addresses are) Tj-79.56 -12.12  TD 0.0135  Tc 0.0165  Tw (given as thirteen bit values \(4 hex digits\).  Otherwise addresses are given as eight bit values \(2 hex) Tj0 -11.52  TD 0.0089  Tc 0.0411  Tw (digits\) to access data memory or I/O space \(whichever is currently being used\).) TjT* 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (34/) Tj18 0  TD /F6 9.96  Tf(03) Tj12 0  TD /F5 9.96  Tf(  /) Tj18 0  TD /F6 9.96  Tf(03) Tj12 0  TD /F5 9.96  Tf(  37/) Tj30 0  TD /F6 9.96  Tf(17) Tj-90 -11.76  TD /F2 9.96  Tf0.0132  Tc 0.0168  Tw (Location 34 is examined, LOC is set to 34 and the contents of 34 are displayed \(03\).  Location) Tj0 -11.52  TD 0.012  Tc 0.018  Tw (LOC \(34\) is then examined again and found to contain 03, of course.  Finally, location 37 is) TjT* 0.0089  Tc 0.0277  Tw (examined \(contains 17\), opening it and setting LOC to 37.  At this point, LOC is 37, FILL is) Tj0 -11.4  TD 0.0078  Tc 0.0222  Tw (unchanged, and location 37 is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0104  Tc 0.0404  Tw (<CR> ) Tj37.2 0  TD 0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0072  Tc 0.0228  Tw ( to the presently open memory location and close it. If ) Tj218.76 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0049  Tc 0.0422  Tw ( was specified FILL is set to ) Tj115.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0389  Tc -0.0089  Tw (.  If) Tj-386.16 -12.36  TD 0  Tc 0.03  Tw (no ) Tj12.48 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0041  Tc 0.0259  Tw ( was given both the location and FILL ) Tj155.4 0  TD 0.0096  Tc 0.0204  Tw (are left unchanged and the locations is closed. If the) Tj-173.88 -12.12  TD 0.0024  Tc 0.0676  Tw (current memory space being accessed is program memory a word is written to memory by the) Tj0 -11.52  TD 0.0108  Tc 0.0342  Tw (command.  Otherwise a byte is written to data memory or I/O space \(whichever is currently being) Tj0 -11.4  TD 0.0094  Tc 0  Tw (used\).) Tj0 -11.52  TD 0.0077  Tc (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (35/) Tj18 0  TD /F6 9.96  Tf(05) Tj12 0  TD /F5 9.96  Tf(  <CR>) Tj-30 -11.28  TD (38/) Tj18 0  TD /F6 9.96  Tf(18) Tj12 0  TD /F5 9.96  Tf(  25<CR>) Tj-30 -11.76  TD /F2 9.96  Tf0.008  Tc 0.0295  Tw (Location 35 is opened and examined by the '/' command, but not changed and closed by the) Tj0 -11.52  TD 0.012  Tc 0.026  Tw ('<CR>'.  Location 38 is opened, examined \(contains 18\), and its contents are changed to 25.) Tj0 -11.4  TD 0.0048  Tc 0.0452  Tw (Now LOC is 38, FILL is 25, and no memory location is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0226  Tc (+) Tj37.2 0  TD 0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0069  Tc 0.0317  Tw ( to the presently open memory location and examine the next location.  If ) Tj295.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0257  Tc 0.0443  Tw ( is not given) Tj-341.28 -12.36  TD 0.0065  Tc 0.0235  Tw (the location is left unchanged.  If ) Tj134.4 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0068  Tc 0.0341  Tw ( was specified the contents of the opened location are changed to) Tj-140.4 -12.36  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0018  Tc 0.0518  Tw ( and FILL is set to ) Tj76.08 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0094  Tc -0.0094  Tw (.  After depositing ) Tj75.24 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0032  Tc 0.0668  Tw (, LOC is incremented and this new memory location is) Tj-169.32 -12.12  TD 0.0092  Tc 0.038  Tw (examined \(opening it\).  If the current memory space being accessed is program memory, addresses) Tj0 -11.4  TD 0.0263  Tc 0.0037  Tw (are ) Tj14.76 0  TD 0.0068  Tc 0.0307  Tw (output as thirteen bit values \(4 hex digits\) and words are written to program memory by the) Tj-14.76 -11.52  TD 0.0117  Tc 0.0183  Tw (command.  Otherwise addresses are output as eight ) Tj207.36 0  TD 0.0089  Tc 0.0211  Tw (bit values \(2 hex digits\) and bytes are written to) Tj-207.36 -11.52  TD 0.0108  Tc 0.0325  Tw (data memory or I/O space \(whichever is currently being used\).) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (43/) Tj18 0  TD /F6 9.96  Tf(37 ) Tj18 0  TD /F5 9.96  Tf( +) Tj-36 -11.4  TD /F6 9.96  Tf(44/) Tj18 0  TD (38  ) Tj24 0  TD /F5 9.96  Tf(42+) Tj-42 -11.28  TD /F6 9.96  Tf(45/39  ) Tj42 0  TD /F5 9.96  Tf(+) Tj-42 -11.4  TD /F6 9.96  Tf(46/40) Tj0 -11.64  TD /F2 9.96  Tf0.0108  Tc 0.0192  Tw (Location 43 is opened and examined, but not changed.  Location 44 is then opened and) Tj0 -11.52  TD 0.0128  Tc 0.0243  Tw (examined \(due to the '+' command\) and its contents are changed to 42.  Locations 45 and 46) TjT* 0.0098  Tc 0.0352  Tw (are then opened and examined, but not changed, through the '+' command.  LOC is now 46,) TjT* 0.008  Tc 0.022  Tw (FILL is 42, and location 46 is open.) Tj-64.8 -23.16  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0088  Tc (^) Tj37.2 0  TD 0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0103  Tc 0.0197  Tw ( to the presently open memory location and examine the previous location.  If ) Tj312.96 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0136  Tc 0.0164  Tw ( is not) Tj-358.56 -12.36  TD 0.0075  Tc 0.0225  Tw (given the location is left unchanged.  If ) Tj159.12 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0  Tc 0.0646  Tw ( was specified FILL is set to ) Tj115.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0059  Tc 0.0241  Tw ( and ) Tj19.44 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0147  Tc 0.0153  Tw ( is stored at the open) Tj-312.36 -12.36  TD 0.0048  Tc 0.0252  Tw (memory location.  After depositing ) Tj143.16 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0022  Tc 0.0322  Tw (, LOC is ) Tj36.72 0  TD 0.0112  Tc 0.0388  Tw (decremented and this new memory location is) Tj-185.88 -12.12  TD 0.0092  Tc 0.038  Tw (examined \(opening it\).  If the current memory space being accessed is program memory, addresses) Tj0 -11.52  TD 0.0263  Tc 0.0037  Tw (are ) Tj14.76 0  TD 0.0068  Tc 0.0307  Tw (output as thirteen bit values \(4 hex digits\) and words are written to program memory by the) TjETendstream
endobj
27 0 obj
8828
endobj
25 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 26 0 R
>>
endobj
33 0 obj
<<
/Length 34 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0278  Tc 0  Tw (Commands) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-156.36 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (4) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-153.72 665.28  TD 0.0117  Tc 0.0183  Tw (command.  Otherwise addresses are output as eight ) Tj207.36 0  TD 0.0089  Tc 0.0211  Tw (bit values \(2 hex digits\) and bytes are written to) Tj-207.36 -11.52  TD 0.0108  Tc 0.0325  Tw (data memory or I/O space \(whichever is currently being used\).) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (E0/) Tj18 0  TD /F6 9.96  Tf(50) Tj12 0  TD /F5 9.96  Tf(  23^) Tj-30 -11.28  TD /F6 9.96  Tf(DF/) Tj18 0  TD (4F) Tj12 0  TD /F5 9.96  Tf(  22^) Tj-30 -11.52  TD /F6 9.96  Tf(DE/4E) Tj0 -11.64  TD /F2 9.96  Tf0.01  Tc 0.02  Tw (Location E0 is opened and examined and changed to 23.  Next, location DF is opened and) Tj0 -11.4  TD 0.0112  Tc 0.0188  Tw (examined through the action of the '^' command.  It is then changed to 22 and location DE is) Tj0 -11.52  TD 0.0102  Tc 0.0262  Tw (opened and examined.  At the end of this sequence LOC is DE, FILL is 22, and location DE is) TjT* -0.0024  Tc 0  Tw (open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc (n) Tj6 0  TD /F2 9.96  Tf-0.0089  Tc (;) Tj37.2 0  TD 0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0071  Tc 0.0229  Tw ( to the presently open memory location and re-examine it.  If ) Tj245.64 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.01  Tc 0.02  Tw ( is not given the location is) Tj-291.24 -12.24  TD -0.0017  Tc 0.0317  Tw (left unchanged.  If ) Tj75.72 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0051  Tc 0.0649  Tw ( was specified, ) Tj61.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0079  Tc 0.0321  Tw ( is stored at LOC \(if open\) and FILL is set to ) Tj181.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0015  Tc 0.0285  Tw (.  LOC will) Tj-337.08 -12.12  TD 0.0145  Tc 0.0235  Tw (always be left unchanged and open.  If the current memory space being accessed is program) Tj0 -11.52  TD 0.014  Tc 0.016  Tw (memory, addresses are ) Tj93.84 0  TD 0.01  Tc 0.02  Tw (output as thirteen bit values \(4 hex digits\) and 16-bit words are written to) Tj-93.84 -11.52  TD 0.0116  Tc 0.0284  Tw (program memory by the command.  Otherwise addresses are output as eight ) Tj306.84 0  TD 0.0066  Tc 0.0234  Tw (bit values \(2 hex digits\)) Tj-306.84 -11.52  TD 0.0074  Tc 0.0466  Tw (and 8-bit bytes are written to data memory or I/O space \(whichever is currently being used\).) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (C0/) Tj18 0  TD /F6 9.96  Tf(60) Tj12 0  TD /F5 9.96  Tf(  ;) Tj-30 -11.28  TD /F6 9.96  Tf(C0/) Tj18 0  TD (60) Tj12 0  TD /F5 9.96  Tf(  8E;) Tj-30 -11.52  TD /F6 9.96  Tf(C0/8E) Tj0 -11.64  TD /F2 9.96  Tf0.0067  Tc 0.0458  Tw (Location C0 is opened and examined.  It is then re-opened and examined with the ';' command.) Tj0 -11.4  TD 0.0048  Tc 0.0385  Tw (Then 8E is stored at C0 and it is opened and examined yet another time, again using the ';') Tj0 -11.52  TD 0.0085  Tc 0.0335  Tw (command.  Note that when it is examined this time its contents are 8E not 60.  LOC is now C0,) TjT* 0.0035  Tc 0.0415  Tw (FILL is now 8E, and location C0 is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.03  Tc (.) Tj37.2 0  TD 0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0069  Tc 0.0317  Tw ( to the presently open memory location and examine the next location.  If ) Tj295.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0  Tc 0.0601  Tw ( is not given it) Tj-341.28 -12.36  TD 0.0029  Tc 0.0031  Tw (defaults to FILL.  If ) Tj82.08 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0049  Tc 0.0594  Tw ( was specified FILL is set to ) Tj115.92 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0117  Tc 0.0354  Tw (.  After depositing to memory, LOC is) Tj-210 -12  TD 0.0054  Tc 0.0546  Tw (incremented and this new memory location is examined \(opening it\).  Unlike the '<CR>', '+', '^', and) Tj0 -11.52  TD 0.015  Tc 0.0235  Tw (';' commands, this command always changes the presently open location.  If the current memory) TjT* 0.0145  Tc 0.0155  Tw (space being accessed is program memory, addresses are ) Tj226.32 0  TD 0.0074  Tc 0.0226  Tw (output as thirteen bit values \(4 hex digits\)) Tj-226.32 -11.52  TD 0.007  Tc 0.0455  Tw (and words are written to memory by the command.  Otherwise addresses are output as eight ) Tj370.08 0  TD 0.0141  Tc 0  Tw (bit) Tj-370.08 -11.52  TD 0.0126  Tc 0.0249  Tw (values \(2 hex digits\) and bytes are written to data memory or I/O space \(whichever is currently) Tj0 -11.52  TD 0  Tc 0.1495  Tw (being used\).) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (B1/) Tj18 0  TD /F6 9.96  Tf(61) Tj12 0  TD /F5 9.96  Tf(  32.) Tj-30 -11.28  TD /F6 9.96  Tf(B2/) Tj18 0  TD (62) Tj12 0  TD /F5 9.96  Tf(  .) Tj-30 -11.4  TD /F6 9.96  Tf(B3/) Tj18 0  TD (63) Tj12 0  TD /F5 9.96  Tf(  33.) Tj-30 -11.4  TD /F6 9.96  Tf(B4/64) Tj0 -11.64  TD /F2 9.96  Tf0.0123  Tc 0.0177  Tw (Location B1 is opened and examined.  It is then changed to 32 and location B2 is examined) Tj0 -11.52  TD 0.0081  Tc 0.0346  Tw (with the '.' command.  At this point FILL is 32.  Next, location B2 is changed to 32 and) Tj0 -11.4  TD 0.0128  Tc 0.0172  Tw (location B3 is opened and examined.  Finally, location B3 is changed to 33 and location B4 is) Tj0 -11.52  TD 0.0118  Tc 0.0249  Tw (opened.  LOC is now B4, FILL is 33, locations B1 and B2 contain 32, location B3 contains 33,) TjT* 0.0063  Tc 0.0237  Tw (and locations B4 is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0344  Tc (Z) Tj37.2 0  TD -0.0079  Tc 0.0779  Tw (Fill the next ) Tj50.76 0  TD 0.0052  Tc 0.0398  Tw (eight \(8\) or sixteen \(16\) memory locations with ) Tj192.12 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0124  Tc 0.0176  Tw ( \(word or byte\).  If the current) Tj-248.88 -12.12  TD 0.0099  Tc 0.0458  Tw (memory space being accessed is program memory, eight words are filled.  Otherwise sixteen bytes) Tj0 -11.64  TD 0.0042  Tc -0.0042  Tw (are filled.  If ) Tj52.44 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0129  Tc 0.0171  Tw ( is not specified it defaults to FILL) Tj139.08 0  TD 0.0062  Tc 0.0438  Tw (, else FILL is set to ) Tj79.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0245  Tc 0.0055  Tw (.  The eight words \(program) Tj-283.32 -12.12  TD 0.0102  Tc 0.0348  Tw (memory\) or sixteen bytes \(data memory or I/O space) Tj211.56 0  TD 0.0115  Tc 0.0185  Tw (\) following those changed are then displayed in) Tj-211.56 -11.52  TD 0.0064  Tc 0.0579  Tw (the format of the 'M' command.  Additionally, the memory location following the changed values) Tj0 -11.52  TD 0.0146  Tc 0.0225  Tw (\(the first of the eight or sixteen displayed\) is opened and examined. LOC is updated to this memory) TjT* -0.0023  Tc 0  Tw (location.) Tj0 -11.4  TD 0.0077  Tc (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (50/) Tj18 0  TD /F6 9.96  Tf(70) Tj12 0  TD /F5 9.96  Tf(  0Z) Tj-30 -11.28  TD /F6 9.96  Tf(60  80 81 82 83 84 85 86 87  88 89 8A 8B 8C 8D 8E 8F  60/80) Tj354 0  TD /F5 9.96  Tf(  Z) Tj-354 -11.52  TD /F6 9.96  Tf(70  90 91 92 93 94 95 96 97  98 99 9A 9B 9C 9D 9E 9F  70/90) TjETendstream
endobj
34 0 obj
7813
endobj
32 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 33 0 R
>>
endobj
37 0 obj
<<
/Length 38 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj422.52 0  TD 0.0278  Tc 0  Tw (Commands) Tj-214.8 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (5) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-132.12 665.28  TD 0.0042  Tc 0.0325  Tw (Location 50 is opened and examined.  Locations 50 to 5F are then changed to 0 with the 'Z') Tj0 -11.52  TD 0.0133  Tc 0.0167  Tw (command.  This also causes locations 60 to 6F to be displayed and location 60 to be opened) Tj0 -11.4  TD 0.0102  Tc 0.0198  Tw (and examined.  The next 'Z' command stores a 0 at locations 60 through 6F \(FILL is 0\) and) Tj0 -11.52  TD 0.0128  Tc 0.0172  Tw (displays locations 70 to 7F and examines and opens location 70.  Now LOC is 70, FILL is 0,) TjT* 0.0076  Tc 0.0224  Tw (and location 70 is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0256  Tc (M) Tj37.2 0  TD 0.0037  Tc 0.0263  Tw (Display the next ) Tj67.92 0  TD 0.0141  Tc 0.0159  Tw (eight \(8\) or sixteen \(16\) memory locations starting at ) Tj214.2 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0011  Tc -0.0089  Tw (.  If ) Tj16.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0073  Tc 0.0467  Tw ( is not given it defaults) Tj-310.8 -12.12  TD 0.0029  Tc 0.0587  Tw (to LOC.  After displaying memory LOC is set to the address of the word or byte following the last) Tj0 -11.4  TD 0.0103  Tc 0.0338  Tw (word or byte displayed.  This closes any open memory location.  If the current memory space being) Tj0 -11.52  TD 0.0115  Tc 0.0357  Tw (accessed is program memory, eight words are output by the command.  Otherwise sixteen bytes) TjT* 0.0099  Tc 0.0293  Tw (from either data memory or I/O space \(whichever is currently being used\) are output.) TjT* 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (30M) Tj0 -11.4  TD /F6 9.96  Tf(30  A0 A1 A2 A3 A4 A5 A6 A7  A8 A9 AA AB AC AD AE AF) Tj312 0  TD /F5 9.96  Tf(  M) Tj-312 -11.28  TD /F6 9.96  Tf(40  B0 B1 B2 B3 B4 B5 B6 B7  B8 B9 BA BB BC BD BE BF) Tj312 0  TD /F5 9.96  Tf(  80M) Tj-312 -11.52  TD /F6 9.96  Tf(80  20 21 22 23 24 25 26 27  28 29 2A 2B 2C 2D 2E 2F) Tj0 -11.52  TD /F2 9.96  Tf0.0139  Tc 0.009  Tw (Locations 30 to 3F are displayed.  Then locations 40 to 4F are displayed \(LOC was 40 after) TjT* 0.0106  Tc 0.0365  Tw (first 'M' command\).  Finally, locations 80 ) Tj168.36 0  TD 0.0113  Tc 0.0187  Tw (thru 8F are displayed.  At the end of all this, LOC is) Tj-168.36 -11.52  TD 0.0053  Tc 0.0514  Tw (90, FILL is unchanged, and no memory location is open.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0089  Tc (N) Tj37.2 0  TD 0.0101  Tc -0.0201  Tw (Display the previous ) Tj85.2 0  TD 0.0029  Tc 0.0421  Tw (eight \(8\) or sixteen \(16\) memory locations from ) Tj193.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.03  Tc (.  ) Tj7.56 0  TD /F4 9.96  Tf0.024  Tc (n) Tj6 0  TD /F2 9.96  Tf-0.0019  Tc 0.0319  Tw ( is the address of the) Tj-298.56 -12.24  TD 0.0119  Tc 0.0181  Tw (location following the last location to be displayed.  That is, locations \() Tj284.4 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0083  Tc 0.0383  Tw ( - 9) Tj13.32 0  TD 0.0433  Tc -0.0133  Tw (\) ) Tj5.88 0  TD 0.0517  Tc -0.0217  Tw (or ) Tj10.92 0  TD 0.0433  Tc 0  Tw (\() Tj3.36 0  TD /F4 9.96  Tf0.024  Tc (n) Tj6 0  TD /F2 9.96  Tf0.0087  Tc 0.0213  Tw ( - 17\) to \() Tj37.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0089  Tc 0.0211  Tw ( - 1\)) Tj-373.68 -12.36  TD 0.0089  Tc -0.0029  Tw (will be displayed.  If ) Tj84.96 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0034  Tc 0.0491  Tw ( is not given it defaults to LOC.  After displaying memory LOC is set to the) Tj-90.96 -12.12  TD 0.0101  Tc 0.034  Tw (address of the first of the word or byte displayed.  The locations are still displayed with increasing) Tj0 -11.52  TD 0.0109  Tc 0.0416  Tw (addresses as you move to the right across the output.  This command closes any open memory) TjT* 0.006  Tc 0.056  Tw (location.  If the current memory space being accessed is program memory, eight words are output) TjT* 0.0093  Tc 0.0367  Tw (by the command.  Otherwise sixteen bytes from either data memory or I/O space \(whichever is) Tj0 -11.4  TD 0.0082  Tc 0.0218  Tw (currently being used\) is output.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (40N) Tj0 -11.28  TD /F6 9.96  Tf(30  F0 F1 F2 F3 F4 F5 F6 F7  F8 F9 FA FB FC FD FE FF) Tj312 0  TD /F5 9.96  Tf(  N) Tj-312 -11.28  TD /F6 9.96  Tf(20  E0 E1 E2 E3 E4 E5 E6 E7  E8 E9 EA EB EC ED EE EF) Tj312 0  TD /F5 9.96  Tf(  80N) Tj-312 -11.52  TD /F6 9.96  Tf(70  20 21 22 23 24 25 26 27  28 29 2A 2B 2C 2D 2E 2F) Tj0 -11.64  TD /F2 9.96  Tf0.0147  Tc 0.0033  Tw (Locations 30 to 3F are displayed.  Next, locations 20 ) Tj213.84 0  TD 0.009  Tc 0.0382  Tw (thru 2F are displayed \(LOC was 30 after) Tj-213.84 -11.4  TD 0.0106  Tc 0.0344  Tw (the first 'N' command\).  Finally, locations 70 to 7F are examined.  When completed, LOC is) Tj0 -11.52  TD 0.0069  Tc 0.0497  Tw (70, FILL is unchanged, and no memory locations are open.) Tj-64.8 -23.04  TD 0.0123  Tc 0.0362  Tw (NOTE: Deposit commands work only immediately following a command which opens and examines a) Tj0 -11.52  TD 0.0104  Tc 0.0196  Tw (memory location \() Tj73.8 0  TD 0  Tc 0.0594  Tw (ie. '/', '+', '^|', ') Tj54.84 0  TD 0.0102  Tc 0.0348  Tw (;', '.', 'T', 'X', or 'Z'\).  At any other time \(no open memory location\) an error) Tj-128.64 -11.52  TD 0.0012  Tc 0.0588  Tw (message will be output when an attempt is made to deposit to memory.) Tj-21.6 -49.32  TD /F2 12  Tf-0.0068  Tc 0.0068  Tw (Register Commands) Tj21.6 -29.88  TD /F2 9.96  Tf0.0084  Tc 0.0342  Tw (The register commands are used to display and alter the contents of the CPU registers.  They will always close) Tj0 -11.52  TD -0  Tc 0.0701  Tw (any open memory location.) Tj0 -23.04  TD -0.0433  Tc 0  Tw (R) Tj43.2 0  TD 0.0059  Tc 0.0441  Tw (Display the contents of the CPU registers.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (R) Tj0 -11.52  TD /F6 9.96  Tf(A:00  F:C0  X:00  S:00  P:0000) TjT* /F2 9.96  Tf0.012  Tc 0.018  Tw (The registers are displayed.) TjETendstream
endobj
38 0 obj
6483
endobj
35 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 37 0 R
>>
endobj
40 0 obj
<<
/Length 41 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0278  Tc 0  Tw (Commands) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-156.36 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (6) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-196.92 665.04  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0433  Tc (R) Tj6.6 0  TD /F4 9.96  Tf0.024  Tc (r) Tj30.6 0  TD /F2 9.96  Tf0.0135  Tc 0.0165  Tw (Deposit ) Tj33.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0073  Tc 0.0347  Tw ( \(byte or word, depending on the register\) to register ) Tj211.8 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (r) Tj6 0  TD /F2 9.96  Tf0.0075  Tc -0.0015  Tw (.  Note that if ) Tj55.56 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0  Tc 0.06  Tw ( is not specified this) Tj-318.96 -12.36  TD 0.0111  Tc 0.0189  Tw (becomes the register display command and ) Tj174.84 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (r) Tj6 0  TD /F2 9.96  Tf0.0112  Tc 0.0188  Tw ( \(a register name\) should not be input.  ) Tj157.2 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (r) Tj6 0  TD /F2 9.96  Tf0  Tc 0.0298  Tw ( is a letter \('A',) Tj-344.04 -12  TD 0.0025  Tc 0.0635  Tw ('F', 'P', 'S', or 'X'\) which specifies the register to change.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (35RA) Tj0 -11.28  TD (20RS) Tj0 -11.4  TD (1300RP) Tj0 -11.28  TD (R) Tj0 -11.4  TD /F6 9.96  Tf(A:35  F:C0  X:00  S:20  P:1300) Tj0 -11.64  TD /F2 9.96  Tf0.0079  Tc 0.0335  Tw (Stores a 35 in register A.  Next, a 20 is stored in the stack pointer \(register S\) and then 1300 is) Tj0 -11.52  TD 0.007  Tc 0.031  Tw (stored in the program counter \(register P\).  Finally, the registers are displayed with the 'R') TjT* 0.0107  Tc 0.0285  Tw (command, reflecting the new values.  Note that the simulator only outputs a ) Tj305.76 0  TD 0.022  Tc 0.008  Tw (newline in) Tj-305.76 -11.52  TD 0.0108  Tc 0.0192  Tw (response to this command.) Tj-86.4 -49.32  TD /F2 12  Tf0.0014  Tc -0.0014  Tw (Execution commands) Tj21.6 -29.88  TD /F2 9.96  Tf0.0152  Tc 0.0223  Tw (The execution commands are for executing user software.  Breakpoints are active \(if enabled\) while a program) Tj0 -11.52  TD 0.0078  Tc 0.0336  Tw (is running in response to a 'G', 'S', or 'P' command, and for certain cases an 'X' command.  Interrupts can also) TjT* 0.0057  Tc 0.0443  Tw (be active while running under these commands.) Tj0 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0089  Tc (G) Tj37.2 0  TD 0.0034  Tc 0.0266  Tw (Start execution at locatio) Tj99.6 0  TD -0.06  Tc -0.03  Tw (n ) Tj7.44 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0072  Tc 0.0468  Tw (.  If not given, ) Tj59.28 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0149  Tc 0.0151  Tw ( defaults to START, else START is set to ) Tj168.96 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0055  Tc -0.0355  Tw (.  The) Tj-353.28 -12.12  TD 0.006  Tc 0.0325  Tw (breakpoints will be active if enabled by the user and interrupts can occur if ) Tj301.44 0  TD 0.0074  Tc 0.0226  Tw (they are enabled by the) Tj-301.44 -11.4  TD -0.0293  Tc 0  Tw (program.) Tj0 -11.52  TD 0.0077  Tc (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (1500G) Tj0 -11.64  TD /F2 9.96  Tf0.0142  Tc 0.0008  Tw (Begins program execution at location 1500.  A ) Tj189.72 0  TD 0.0042  Tc 0.0258  Tw (newline is output to position the cursor on the) Tj-189.72 -11.52  TD 0.0134  Tc 0.0252  Tw (next line when program execution begins.  This command sets START to 1500 to subsequent) Tj0 -11.52  TD 0.0112  Tc 0.0428  Tw ('G' commands without an argument will begin execution at location 1500.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0178  Tc (S) Tj37.2 0  TD 0.0064  Tc -0  Tw (Call the subroutine at location ) Tj122.88 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0072  Tc 0.0468  Tw (.  If not given, ) Tj59.28 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0149  Tc 0.0151  Tw ( defaults to START, else START is set to ) Tj168.96 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0389  Tc -0.0089  Tw (.  If) Tj-369.12 -12.12  TD 0.0071  Tc 0.0362  Tw (enabled by the user the breakpoints will be active.  The program can also be interrupted if it has) Tj0 -11.4  TD -0  Tc 0.0301  Tw (enabled interrupts.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (1321S) Tj0 -11.4  TD /F6 9.96  Tf(RETURN   A:35  F:A5  X:46  S:FE  P:1322) Tj0 -11.64  TD /F2 9.96  Tf0.0093  Tc 0.0293  Tw (The subroutine beginning at location 1321 is executed.  On return from the subroutine the) Tj0 -11.52  TD 0.0073  Tc 0.0227  Tw (registers are output.  START is set to 1321, so any subsequent 'S' ) Tj263.16 0  TD 0.0349  Tc -0.0049  Tw (command without an) Tj-263.16 -11.4  TD 0.0068  Tc 0.0432  Tw (argument will execute this same subroutine again.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0178  Tc (P) Tj37.2 0  TD 0.0081  Tc -0.0021  Tw (Proceed with execution at location ) Tj140.64 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0072  Tc 0.0468  Tw (.  If not given, ) Tj59.28 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0197  Tc 0.0103  Tw ( defaults to LOC if there is an open program) Tj-211.92 -12.12  TD 0.0112  Tc 0.0308  Tw (memory location and the user PC if not.  The ) Tj183.12 0  TD 0.0137  Tc 0.0313  Tw (breakponts and interrupts will be active if enabled by) Tj-183.12 -11.52  TD 0.0094  Tc 0.0281  Tw (the user and program respectively.  This is identical to the 'G' command except for the default) Tj0 -11.52  TD 0.0084  Tc 0.0216  Tw (argument value.) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (P) Tj0 -11.4  TD /F6 9.96  Tf(TRAP    A:0A  F:03  X:0F  S:AB  P:1FE3) Tj0 -11.64  TD /F2 9.96  Tf0.0143  Tc 0.0037  Tw (The program is executed beginning at location 1400.  A ) Tj225.84 0  TD 0.0009  Tc 0.0291  Tw (newline is output to position the) Tj-225.84 -11.52  TD 0.0104  Tc 0.0271  Tw (cursor on the next line.  In this case the program execution began at location 1400 because) Tj0 -11.52  TD 0.0112  Tc 0.053  Tw (there was no argument to the 'P' command, no open memory locations, and the program) TjT* 0.0207  Tc 0.0093  Tw (counter contained 1400.) Tj-64.8 -23.16  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0344  Tc (T) Tj37.2 0  TD 0.0139  Tc -0.0239  Tw (Trace at location ) Tj69.72 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0064  Tc 0.0064  Tw (.  Executes the instruction at location ) Tj150.36 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.005  Tc 0.049  Tw (.  If not input, ) Tj57.6 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.009  Tc 0.021  Tw ( defaults to LOC if there is) Tj-295.68 -12.12  TD 0.0054  Tc 0.0458  Tw (an open program memory location and to the user PC otherwise.  The CPU will execute only one) TjETendstream
endobj
41 0 obj
7218
endobj
39 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 40 0 R
>>
endobj
43 0 obj
<<
/Length 44 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj422.52 0  TD 0.0278  Tc 0  Tw (Commands) Tj-214.8 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (7) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-153.72 665.28  TD 0.0114  Tc 0.0249  Tw (instruction and then return control to the user with the current PC opened.  LOC is set to the current) Tj0 -11.52  TD 0.0079  Tc 0.0392  Tw (PC in the program memory space.  Breakpoints and interrupts are always disabled while tracing.) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (1000T) Tj0 -11.28  TD /F6 9.96  Tf(TRACE   A:0A  F:06  X:10  S:27  P:1001 / FFE9) Tj270 0  TD /F5 9.96  Tf(   T) Tj-270 -11.4  TD /F6 9.96  Tf(TRACE   A:0A  F:06  X:10  S:25  P:1FE9 / 1C00) Tj270 0  TD /F5 9.96  Tf(   T) Tj-270 -11.4  TD /F6 9.96  Tf(TRACE   A:0A  F:06  X:10  S:27  P:1002 / 6015) Tj0 -11.64  TD /F2 9.96  Tf0.0087  Tc 0.0213  Tw (First the instruction at location 1000 is executed and the registers displayed.  Next the) Tj0 -11.52  TD 0.0092  Tc 0.0294  Tw (instruction at 1001 is executed \(a CALL to location 1FE9\) and the new register values) TjT* 0.0101  Tc 0.0199  Tw (displayed.  Finally the instruction at location 1FE9 \(an RTS instruction\) is executed and the) Tj0 -11.4  TD 0.0106  Tc 0.0194  Tw (register values displayed.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0089  Tc (X) Tj37.2 0  TD 0.0121  Tc -0.0061  Tw (Top level trace at location ) Tj106.92 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0028  Tc 0.0328  Tw (.  If not given, ) Tj59.04 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0179  Tc 0.0241  Tw ( defaults to LOC if there is an open program memory) Tj-177.96 -12.36  TD 0.0091  Tc 0.0209  Tw (location and to the user PC otherwise.  If the instruction at ) Tj235.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0138  Tc 0.0312  Tw ( is not a subroutine call this command is) Tj-241.68 -12.12  TD 0.0079  Tc 0.0406  Tw (exactly like trace, executing only one instruction, with breakpoints and interrupts disabled.  If,) Tj0 -11.76  TD 0.0103  Tc 0.0197  Tw (however, the instruction at ) Tj109.08 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0106  Tc 0.0194  Tw ( is a subroutine call then this command acts like S and calls the routine.) Tj-115.08 -12  TD 0.0105  Tc 0.027  Tw (In this case, breakpoints are active \(if enabled through the '$E' command\) and so might be interrupts) Tj0 -11.52  TD 0.0124  Tc 0.0176  Tw (\(if enabled by the program\).  After the instruction or subroutine returns LOC is set to the current PC) TjT* 0.0053  Tc 0.0547  Tw (in the program memory space.) TjT* 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (1A00X) Tj0 -11.4  TD /F6 9.96  Tf(TRACE   A:0A  F:02  X:10  S:27  P:1A01 / E500) Tj270 0  TD /F5 9.96  Tf(   X) Tj-270 -11.28  TD /F6 9.96  Tf(RETURN  A:6E  F:03  X:10  S:27  P:1A02 / 6116) Tj270 0  TD /F5 9.96  Tf(   X) Tj-270 -11.4  TD /F6 9.96  Tf(TRACE   A:84  F:06  X:10  S:27  P:1A03 / 8112) Tj0 -11.64  TD /F2 9.96  Tf0.0105  Tc 0.0195  Tw (First, the instruction at location 1A00 is not a subroutine call so it is single-stepped and after it) Tj0 -11.52  TD 0.0098  Tc 0.0202  Tw (is executed the registers are displayed.  Next the instruction at location 1A01 is a subroutine) TjT* 0.0092  Tc 0.0208  Tw (call so the subroutine is executed and the registers are displayed on return.  Finally, the) TjT* 0.0079  Tc 0.0362  Tw (instruction at location 1A02 is not a subroutine call so, again, it is traced and the registers are) TjT* 0.009  Tc 0.021  Tw (displayed after executing the instruction.) Tj-86.4 -49.32  TD /F2 12  Tf-0  Tc 0  Tw (Breakpoint Commands) Tj21.6 -29.88  TD /F2 9.96  Tf0.0123  Tc 0.0177  Tw (The breakpoint commands are used to set or reset specific breakpoints, enable or disable all set breakpoints, or) Tj0 -11.52  TD 0.0112  Tc 0.0308  Tw (clear or display all set breakpoints. The ''$'' is the actual character ''$'' or the key <ESC>.  For more information) TjT* 0.0063  Tc 0.0237  Tw (see the section on breakpoints.) Tj0 -23.04  TD 0.0683  Tc 0  Tw ($B) Tj43.2 0  TD 0.0078  Tc 0.0342  Tw (Display all set breakpoints and the enabled/disabled status of the breakpoints.) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc ($B) Tj0 -11.4  TD /F6 9.96  Tf(Breakpoints \(enabled\)) Tj126 0  TD (:  1200  1237  1274) Tj-126 -11.64  TD /F2 9.96  Tf0.0084  Tc 0.0325  Tw (The breakpoints are displayed along with the enable/disable status of the breakpoints.) Tj-64.8 -23.28  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0683  Tc ($C) Tj37.2 0  TD 0.0086  Tc 0.0043  Tw (Clear one or all breakpoints.  If ) Tj127.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.012  Tc 0.003  Tw ( \(word\) is given the breakpoint at location ) Tj170.52 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0058  Tc 0.0242  Tw ( is removed.  If there is) Tj-310.2 -12.36  TD 0.009  Tc -0.009  Tw (no breakpoint at location ) Tj102.12 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0158  Tc -0.0029  Tw ( it is an error.  If ) Tj67.92 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0103  Tc 0.0197  Tw ( is not given all of the breakpoints are cleared) Tj-182.04 -12  TD 0.0113  Tc 0.0187  Tw (\(removed\).  In this case if there are no breakpoints set, it is an error.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (1200$C) Tj0 -11.28  TD ($C) Tj0 -11.76  TD /F2 9.96  Tf0.0106  Tc 0.0114  Tw (First the breakpoint at location 1200 is reset.  The next command removes all of the) Tj0 -11.52  TD 0.0067  Tc 0.0233  Tw (breakpoints.  Note that ) Tj93.6 0  TD 0.0077  Tc 0.0356  Tw (nothing is output by the simulator other than a ) Tj187.44 0  TD 0.0071  Tc 0  Tw (newline.) Tj-345.84 -22.92  TD 0.0344  Tc ($D) Tj43.2 0  TD 0.0057  Tc 0.0243  Tw (Disable all set breakpoints.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) TjETendstream
endobj
44 0 obj
6232
endobj
42 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 43 0 R
>>
endobj
46 0 obj
<<
/Length 47 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0278  Tc 0  Tw (Commands) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-156.36 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (8) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-132.12 665.76  TD /F5 9.96  Tf0.024  Tc 0  Tw ($D) Tj0 -11.76  TD /F2 9.96  Tf0.0154  Tc 0.0146  Tw (The set breakpoints are disabled.  ) Tj136.44 0  TD 0.0098  Tc 0.0202  Tw (Nothing is output by the simulator except a ) Tj175.44 0  TD -0.0133  Tc 0  Tw (newline) Tj31.56 0  TD -0.0344  Tc 0.0644  Tw ( to) Tj-343.44 -11.52  TD 0.004  Tc 0.046  Tw (position the cursor on the next line.) Tj-64.8 -23.04  TD 0.0472  Tc 0  Tw ($E) Tj43.2 0  TD 0.0063  Tc 0.0237  Tw (Enable all set breakpoints.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc ($E) Tj0 -11.76  TD /F2 9.96  Tf0.0138  Tc 0.0162  Tw (The set breakpoints are enabled.  ) Tj134.16 0  TD 0.0098  Tc 0.0202  Tw (Nothing is output by the simulator except a ) Tj175.44 0  TD 0.0071  Tc 0  Tw (newline.) Tj-374.4 -23.16  TD /F4 9.96  Tf0.024  Tc (n) Tj6 0  TD /F2 9.96  Tf0.0811  Tc ($S) Tj37.2 0  TD 0.0087  Tc -0.0027  Tw (Set a breakpoint at location ) Tj111.84 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf-0.0011  Tc -0.0089  Tw (.  If ) Tj16.68 0  TD /F4 9.96  Tf0.024  Tc 0  Tw (n) Tj6 0  TD /F2 9.96  Tf0.0095  Tc 0.0377  Tw ( is not specified it is an error.) Tj-140.52 -12.12  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (1200$S) Tj0 -11.28  TD (1250$S) Tj0 -11.76  TD /F2 9.96  Tf0.0125  Tc 0.0175  Tw (A breakpoint is set at location 1200.  Next a breakpoint is set at location 1250.  Note that) Tj0 -11.52  TD 0.0112  Tc 0.0188  Tw (nothing is output by the simulator in response to this command except a ) Tj290.16 0  TD 0.0222  Tc 0.0078  Tw (newline to position) Tj-290.16 -11.52  TD 0.0081  Tc 0.0219  Tw (the cursor on the next line.) Tj-86.4 -49.2  TD /F2 12  Tf-0.0017  Tc 0.0017  Tw (Miscellaneous Commands) Tj21.6 -30  TD /F2 9.96  Tf0.0433  Tc 0  Tw (I) Tj43.2 0  TD 0.0093  Tc 0.0464  Tw (The simulator displays an identifying message on the screen.  The message contains the simulator) Tj0 -11.52  TD 0.0112  Tc 0.0188  Tw (processor type and the version number.) TjT* 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (I) Tj0 -11.52  TD /F6 9.96  Tf(Caltech10 Simulator v1.0.0) Tj0 -11.64  TD /F2 9.96  Tf0.0053  Tc 0.0487  Tw (The simulator ID message is output.) Tj-64.8 -22.92  TD 0.0089  Tc 0  Tw (Q) Tj43.2 0  TD 0.0107  Tc 0.0193  Tw (Exits the simulator.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (Q) Tj0 -11.52  TD /F6 9.96  Tf(") Tj6 0  TD (system prompt") Tj-6 -11.64  TD /F2 9.96  Tf0.011  Tc 0.0265  Tw (The simulator is exited and control returned to the system.  The system will then output its) Tj0 -12  TD 0.0145  Tc 0.0395  Tw (standard system prompt \(for example ') Tj153.6 0  TD /F5 9.96  Tf0.024  Tc 0  Tw (>) Tj6 0  TD /F2 9.96  Tf0.0294  Tc 0  Tw (' or ') Tj16.92 0  TD /F5 9.96  Tf0.024  Tc 0  Tw ($) Tj6 0  TD /F2 9.96  Tf0.0268  Tc ('\).) Tj-247.32 -23.28  TD 0.0344  Tc (L) Tj43.2 0  TD 0.0104  Tc 0.0196  Tw (Load an object file.  The simulator will prompt for the name of the file.  The simulator expects) Tj0 -11.52  TD 0.0042  Tc 0.0558  Tw (object files to be in the format specified in Appendix A.  If the file doesn't exist, is in the wrong) TjT* 0.0069  Tc 0.0323  Tw (format, or has a data error in it, an error message will be output.) TjT* 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (L) Tj0 -11.28  TD /F6 9.96  Tf(filename:) Tj54 0  TD /F5 9.96  Tf( GCD.COD) Tj-54 -11.76  TD /F2 9.96  Tf0.0051  Tc 0.0249  Tw (The file ) Tj33.84 0  TD 0.0115  Tc 0.0185  Tw (gcd.cod is loaded into memory.  It is assumed that ) Tj203.28 0  TD 0.0101  Tc 0.0199  Tw (gcd.cod is the proper format.) Tj-301.92 -23.04  TD 0.0089  Tc 0  Tw (U) Tj43.2 0  TD 0.0052  Tc 0.0368  Tw (Upload a memory file.  The simulator will prompt for the) Tj229.56 0  TD 0.009  Tc 0.061  Tw ( name of the file.  The simulator will then) Tj-229.56 -11.52  TD 0.0061  Tc 0.0479  Tw (output all of the currently selected memory \(data memory, I/O space, or program memory\) to the) Tj0 -11.52  TD 0.0089  Tc 0.0436  Tw (file in ASCII hex with eight \(for program memory\) or sixteen \(for data memory and I/O space\)) Tj0 -11.4  TD 0.0049  Tc 0.0011  Tw (locations per line.  If ) Tj85.44 0  TD 0.0047  Tc 0.053  Tw (there us an error writing to the file, an error message will be output.) Tj-85.44 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (U) Tj0 -11.28  TD /F6 9.96  Tf(filename:) Tj54 0  TD /F5 9.96  Tf( DUMP.OUT) Tj-54 -11.76  TD /F2 9.96  Tf0.0051  Tc 0.0249  Tw (The file ) Tj33.84 0  TD 0.0109  Tc 0.0468  Tw (dump.out is created and filled with a full dump of the currently selected memory) Tj-33.84 -11.52  TD 0.0181  Tc 0  Tw (space.) Tj-64.8 -22.92  TD -0.0939  Tc (!D) Tj43.2 0  TD 0.0054  Tc 0.0464  Tw (Change all future memory accesses to access data memory.  Note tha) Tj276.48 0  TD 0.0073  Tc 0.0467  Tw (t this means all addresses are) Tj-276.48 -11.52  TD 0.0091  Tc 0.0209  Tw (eight \(8\) bits \(2 hex digits\) and the data is also eight \(8\) bits \(2 hex digits\).) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) TjETendstream
endobj
47 0 obj
5495
endobj
45 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F4 23 0 R 
/F5 28 0 R 
/F6 30 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 46 0 R
>>
endobj
49 0 obj
<<
/Length 50 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj422.52 0  TD 0.0278  Tc 0  Tw (Commands) Tj-214.8 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (9) Tj5.04 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-132.12 665.76  TD /F5 9.96  Tf0.024  Tc 0  Tw (!D) Tj0 -11.76  TD /F2 9.96  Tf0.0091  Tc 0.038  Tw (After this command all future memory commands will refer to data memory.  Note that) Tj0 -11.52  TD 0.0112  Tc 0.0188  Tw (nothing is output by the simulator in response to this command except a ) Tj290.16 0  TD 0.0221  Tc 0  Tw (newline.) Tj-354.96 -23.04  TD -0.0767  Tc (!I) Tj43.2 0  TD 0.0091  Tc 0.035  Tw (Change all future memory accesses to access I/O space.  Note that this means all addresses are ) Tj380.4 0  TD 0  Tc 0  Tw (eight) Tj-380.4 -11.52  TD 0.0098  Tc 0.0202  Tw (\(8\) bits \(2 hex digits\) and the data is also eight \(8\) bits \(2 hex digits\).) Tj0 -11.4  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (!I) Tj0 -11.76  TD /F2 9.96  Tf0.0111  Tc 0.0269  Tw (After this command all future memory commands will refer to I/O space.  Note that ) Tj337.68 0  TD -0  Tc 0.0301  Tw (nothing is) Tj-337.68 -11.4  TD 0.0108  Tc 0.0192  Tw (output by the simulator in response to this command except a ) Tj247.92 0  TD 0.0221  Tc 0  Tw (newline.) Tj-312.72 -23.04  TD -0.0472  Tc (!P) Tj43.2 0  TD 0.0081  Tc 0.0459  Tw (Change all future memory accesses to access program memory.  Note that this means all addresses) Tj0 -11.52  TD 0.0263  Tc 0.0037  Tw (are ) Tj14.76 0  TD 0.0087  Tc 0.0213  Tw (thirteen \(13\) bits \(4 hex digits\) and the data is sixteen \(16\) bits \(4 hex digits\).) Tj-14.76 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (!P) Tj0 -11.76  TD /F2 9.96  Tf0.0089  Tc 0.0383  Tw (After this command all future memory commands will refer to program memory.  Note that) Tj0 -11.52  TD 0.0112  Tc 0.0188  Tw (nothing is output by the simulator in response to this command except a ) Tj290.16 0  TD 0.0221  Tc 0  Tw (newline.) Tj-354.96 -22.92  TD 0.0089  Tc (H) Tj43.2 0  TD 0.0044  Tc 0.0616  Tw (Output the help message, a brief summary of the simulator commands.) Tj0 -11.52  TD 0.0077  Tc 0  Tw (Examples:) Tj21.6 -11.16  TD /F5 9.96  Tf0.024  Tc (H) Tj0 -11.64  TD /F2 9.96  Tf0.0045  Tc 0.0655  Tw (Outputs the help message.) TjETendstream
endobj
50 0 obj
2427
endobj
48 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F5 28 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 49 0 R
>>
endobj
52 0 obj
<<
/Length 53 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0094  Tc 0  Tw (Breakpoints) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-158.88 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (10) Tj10.08 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-25.8 556.2  TD /F2 15.96  Tf0.0241  Tc 0  Tw (Breakpoints) Tj-195.24 -70.32  TD /F2 9.96  Tf0.0078  Tc 0.0411  Tw (Breakpoints allow the suspension of a program just before executing a specific instruction.  This is very useful in a) Tj0 -11.52  TD 0.0074  Tc 0.0286  Tw (variety of circumstances.  It is often enlightening to see if the program gets to a certain point, or examine the) Tj0 -11.4  TD 0.0103  Tc 0.0197  Tw (registers at the termination of a loop of subroutine.) Tj0 -23.04  TD 0.0103  Tc 0.0197  Tw (To suspend execution of a program at a specific instruction set a breakpoint at that instruction and enable the) Tj0 -11.52  TD 0.0116  Tc 0.025  Tw (breakpoints.  This breakpoint will return control to the user before executing the instruction.  From there the proceed) TjT* 0.0084  Tc 0.0276  Tw (\('P'\) command may be used to continue the program, or the trace \('T'\) command could be used to step the program,) Tj0 -11.4  TD 0.0099  Tc 0.0372  Tw (or some memory locations could be examined, ) Tj189.36 0  TD 0.0387  Tc -0.0087  Tw (or ...) Tj-189.36 -23.04  TD 0.0115  Tc 0.0312  Tw (Breakpoints may be disabled and enabled with the '$D' and '$E' commands respectively.  The effect is to disable or) Tj0 -11.52  TD 0.0088  Tc 0.0326  Tw (enable all of the set breakpoints.  A breakpoint will only stop program execution if it is both set and breakpoints are) TjT* 0.0113  Tc 0.0296  Tw (enabled.  This feature makes it easy to set strategic breakpoints, turn them off to allow the program to run to check if) TjT* 0.0063  Tc 0.0437  Tw (the bugs are eliminated, and then re-enable them if there are still bugs without necessitating again looking up the) Tj0 -11.4  TD 0.0042  Tc 0.0458  Tw (locations at which to set the breakpoints.) Tj0 -23.04  TD 0.0124  Tc 0.0176  Tw (The simulator allows eight \(8\) breakpoints to be set.  Initially, all breakpoints will be cleared and disabled.  These) Tj0 -11.52  TD 0.0044  Tc 0.0533  Tw (breakpoints may be individually set and reset with the '$S' and '$C' commands respectively.) Tj0 -23.04  TD 0.0055  Tc 0.0457  Tw (Note that breakpoints have no effect when the execution is being traced with the 'T' or 'X' commands.) TjETendstream
endobj
53 0 obj
2480
endobj
51 0 obj
<<
/Type /Page
/Parent 36 0 R
/Resources <<
/Font <<
/F2 14 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 52 0 R
>>
endobj
56 0 obj
<<
/Length 57 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj385.08 0  TD 0.0178  Tc 0.0122  Tw (Software Debugging) Tj-179.88 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (11) Tj10.08 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-53.52 556.2  TD /F2 15.96  Tf0.027  Tc -0.057  Tw (Software Debugging) Tj-167.52 -70.32  TD /F2 9.96  Tf0.0143  Tc 0.0237  Tw (The simulator is very rich in commands for debugging software. With the execution, register, and memory) Tj0 -11.52  TD 0.0128  Tc 0.0292  Tw (examine/deposit commands one can very thoroughly test any piece of code.) Tj0 -22.92  TD 0.0142  Tc 0.0291  Tw (The most obvious command to use when debugging software is the trace \('T'\) command.  This executes a program) Tj0 -11.52  TD 0.0102  Tc 0.0253  Tw (one step at a time, displaying the registers after each step.  To start tracing the 'T' command is used, usually with an) TjT* 0.0109  Tc 0.0261  Tw (argument \(the starting trace address\).  To continue tracing the 'T' command is used without an argument \(assuming) TjT* 0.0094  Tc 0.0347  Tw (memory isn't opened and important registers aren't changed\) and the program will execute one step at a time.) Tj0 -22.92  TD 0.0049  Tc 0.0675  Tw (A somewhat more useful command when some of the program has already been debugged is the top-level trace) Tj0 -11.52  TD 0.0097  Tc 0.0323  Tw (command \('X'\).  As described before, if the instruction to be executed is a subroutine call that routine will be called.) TjT* 0.0075  Tc 0.0437  Tw (Otherwise the single instruction will be executed \(as for trace\).  Any called subroutine will be executed with) TjT* 0.0097  Tc 0.0392  Tw (breakpoints active if the user has enabled them and interrupts possible if the program has enabled them.  By using) TjT* 0.0106  Tc 0.0452  Tw (this command wasting time tracing through routines which have already been debugged can be avoided.) Tj0 -22.92  TD 0.0102  Tc 0.0348  Tw (Another useful command is the subroutine call command \('S'\).  This command is like go \('G'\) ) Tj376.2 0  TD 0.0057  Tc 0.0243  Tw (execept it calls the) Tj-376.2 -11.52  TD 0.0131  Tc 0.0226  Tw (routine at the address given to it rather than jumping to it.  When the routine ends and executes a return from) Tj0 -11.52  TD 0.0103  Tc 0.0397  Tw (subroutine instruction, control is passed to the user and the registers are displayed.  This is most handy when) TjT* 0.0132  Tc 0.0168  Tw (checking routines that do something different on every call \(such as some I/O drivers and counting routines\).) Tj0 -22.92  TD 0.0083  Tc 0.0484  Tw (When program development is well along the way, breakpoints are often the most useful tool for debugging.  When) Tj0 -11.52  TD 0.0123  Tc 0.0177  Tw (a breakpoint is reached the program is stopped, the register contents displayed, and control returned to the user.  The) TjT* 0.007  Tc 0.043  Tw (instruction at the breakpoint has not been executed.  The program can then be continued with the proceed \('P'\)) TjT* 0.01  Tc 0.0255  Tw (command, or stepped with the trace \('T'\) command, or any other command may be used.  This can be a great help in) TjT* 0.0081  Tc 0.0399  Tw (tracking down an error in a program which loops may times, or when the approximate location of the error is known) TjT* 0.0091  Tc 0.0318  Tw (and is deep within the program.  The procedure is to set a breakpoint where the error is thought to be and check) Tj0 -11.4  TD 0.0155  Tc 0.0145  Tw (memory and the registers, as appropriate, for incorrect values.  This procedure is continued \(proceed) Tj0 -11.52  TD 0.011  Tc 0.019  Tw (to next breakpoint, trace, etc.\) ) Tj122.16 0  TD 0.011  Tc 0.0265  Tw (until the error has been found.  Note that the typical way to start the program running) Tj-122.16 -11.52  TD 0.0039  Tc 0.0261  Tw (again after tracing is with ) Tj104.64 0  TD 0.0129  Tc 0.0171  Tw (the proceed \('P'\) command.) TjETendstream
endobj
57 0 obj
3973
endobj
54 0 obj
<<
/Type /Page
/Parent 55 0 R
/Resources <<
/Font <<
/F2 14 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 56 0 R
>>
endobj
59 0 obj
<<
/Length 60 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf-0.0021  Tc 0.0801  Tw (Appendix A - Load File Format) Tj364.08 0  TD 0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj-158.88 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (12) Tj10.08 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-26.4 556.2  TD /F2 15.96  Tf0.0323  Tc -0.0623  Tw (Appendix A) Tj-1.32 -18.36  TD 0.0118  Tc -0.0418  Tw (File Formats) Tj-193.32 -70.32  TD /F2 9.96  Tf0.009  Tc 0.045  Tw (The simulator has two types of files associated with it.  Load files contain memory values to be loaded into program) Tj0 -11.52  TD 0.0084  Tc 0.0342  Tw (memory using the 'L' command.  Upload files are output by the simulator and contain the complete contents of the) TjT* 0.0079  Tc 0.0581  Tw (currently selected memory space and are generated by the 'U' command.) Tj0 -49.32  TD /F2 12  Tf-0.0343  Tc 0.1543  Tw (Load File Format) Tj21.6 -29.88  TD /F2 9.96  Tf0.0101  Tc 0.0274  Tw (The load file is assumed to contain hexadecimal characters giving the values to load into program memory.) Tj0 -11.52  TD 0.0117  Tc 0.0395  Tw (Each line of memory data consists of a program memory address \(typically 4 hex digits\) and program memory) TjT* 0.0066  Tc 0.0286  Tw (data \(16 bits or 4 hex digits\) separated by white space.  All other white space in the file is ignored, as is the) TjT* 0.0095  Tc 0.0205  Tw (remainder of a line after a semicolon \(';'\).) TjT* -0.0021  Tc 0  Tw (Example:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (; ) Tj12 0  TD (this line is just a comment) Tj-12 -11.4  TD (0ABA  89FE    ;LDI  $FE) Tj-43.2 -49.56  TD /F2 12  Tf-0.0217  Tc 0.0817  Tw (Upload File Format) Tj21.6 -29.88  TD /F2 9.96  Tf0.0064  Tc 0.0569  Tw (The upload file is written by the simulator and is a complete dump of whichever memory space is currently) Tj0 -11.52  TD 0.0113  Tc 0.0376  Tw (selected \(256 bytes for data memory and I/O space and 8192 words for program memory\).  The data is written) TjT* 0.0095  Tc 0.0332  Tw (in ASCII hexadecimal characters.  If data memory or I/O space is being dumped each line of the upload file) TjT* 0.0091  Tc -0.0191  Tw (will contain sixteen ) Tj80.76 0  TD 0.0078  Tc 0.0372  Tw (\(16\) two digit hex numbers \(bytes\).  If program memory is being dumped each line of the) Tj-80.76 -11.52  TD 0.0072  Tc 0.0495  Tw (file will contain eight \(8\) four digit hex numbers \(words\).) Tj0 -11.52  TD -0.0021  Tc 0  Tw (Example:) Tj21.6 -11.04  TD /F5 9.96  Tf0.024  Tc (0E00 B735 1B90 0E00 B771 137F A010 11A7) Tj0 -11.28  TD (0E00 B211 10A1 0E00 B241 12B0 0E00 1122) TjETendstream
endobj
60 0 obj
2617
endobj
58 0 obj
<<
/Type /Page
/Parent 55 0 R
/Resources <<
/Font <<
/F2 14 0 R 
/F5 28 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 59 0 R
>>
endobj
62 0 obj
<<
/Length 63 0 R
>>
stream
BT72 747  TD0 0 0 rg /F2 9.96  Tf0.0118  Tc 0.0182  Tw (Simulator User's Manual) Tj359.76 0  TD 0.0106  Tc 0.0494  Tw (Appendix A - File Formats) Tj-154.56 -715.68  TD -0.0767  Tc -0.0133  Tw (- ) Tj5.76 0  TD 0.06  Tc 0  Tw (13) Tj10.08 0  TD 0.0433  Tc -0.0133  Tw ( -) Tj-26.04 556.2  TD /F2 15.96  Tf0.0367  Tc 0.0533  Tw (Appendix ) Tj67.2 0  TD 0.0347  Tc 0  Tw (B) Tj-94.56 -18.36  TD 0.0047  Tc -0.0347  Tw (Command Summary) Tj13.56 -72.48  TD /F0 12  Tf-0.012  Tc 0.132  Tw (Memory Commands) Tj-97.08 -11.76  TD /F2 9.96  Tf-0.0089  Tc 0  Tw (/) Tj25.2 0  TD 0.0099  Tc 0.0801  Tw (examine memory location) Tj-36 -11.52  TD -0.0404  Tc 0  Tw (<CR>) Tj36 0  TD 0.0157  Tc 0.0293  Tw (deposit argument \(if given\) to memory and close memory) Tj-26.64 -11.52  TD 0.0226  Tc 0  Tw (+) Tj26.64 0  TD 0.0149  Tc 0.0285  Tw (deposit argument \(if given\) to memory and examine next location) Tj-26.16 -11.4  TD 0.0088  Tc 0  Tw (^) Tj26.16 0  TD 0.014  Tc 0.016  Tw (deposit argument \(if given\) to memory and examine previous location) Tj-25.2 -11.52  TD -0.0089  Tc 0  Tw (;) Tj25.2 0  TD 0.0134  Tc 0.0166  Tw (deposit argument \(if given\) to memory and examine same location) Tj-25.08 -11.52  TD 0.03  Tc 0  Tw (.) Tj25.08 0  TD 0.0111  Tc 0.0322  Tw (deposit argument \(or default\) to memory and examine next location) Tj-28.2 -11.52  TD 0.0256  Tc 0  Tw (M) Tj28.2 0  TD 0.0111  Tc 0.0389  Tw (examine next 8 or 16 memory locations) Tj-27.36 -11.52  TD 0.0089  Tc 0  Tw (N) Tj27.36 0  TD 0.0067  Tc 0.0433  Tw (examine previous 8 or 16 memory locations) Tj-26.76 -11.52  TD 0.0344  Tc 0  Tw (Z) Tj26.76 0  TD 0.01  Tc 0.02  Tw (deposit argument \(or default\) in next 8 or 16 memory locations) Tj72.6 -24.96  TD /F0 12  Tf-0.0098  Tc 0.1298  Tw (Register Commands) Tj-99.72 -11.76  TD /F2 9.96  Tf-0.0433  Tc 0  Tw (R) Tj27.12 0  TD 0.0226  Tc 0.0074  Tw (display the registers) Tj-31.2 -11.52  TD -0.06  Tc 0  Tw (nRr) Tj31.2 0  TD 0.01  Tc 0.02  Tw (deposit n in register r) Tj26.52 -25.08  TD /F0 12  Tf-0.0012  Tc 0.0012  Tw (Execution and Breakpoint Commands) Tj-53.88 -11.76  TD /F2 9.96  Tf0.0089  Tc 0  Tw (G) Tj27.36 0  TD 0.0152  Tc 0.0148  Tw (begin program execution) Tj-26.64 -11.52  TD -0.0178  Tc 0  Tw (P) Tj26.64 0  TD 0.013  Tc 0.017  Tw (proceed from present location) Tj-26.52 -11.4  TD -0.0178  Tc 0  Tw (S) Tj26.52 0  TD -0.0064  Tc 0.1564  Tw (execute subroutine) Tj-26.88 -11.52  TD 0.0344  Tc 0  Tw (T) Tj26.88 0  TD 0.01  Tc 0.02  Tw (trace \(or single-step\)) Tj-27.36 -11.52  TD 0.0089  Tc 0  Tw (X) Tj27.36 0  TD 0.0057  Tc 0.0243  Tw (top-level trace) Tj-29.64 -11.52  TD 0.0683  Tc 0  Tw ($B) Tj29.64 0  TD 0.0062  Tc 0.0238  Tw (display breakpoints) Tj-29.64 -11.52  TD 0.0683  Tc 0  Tw ($C) Tj29.64 0  TD 0.0109  Tc 0.0191  Tw (clear breakpoints) Tj-29.88 -11.4  TD 0.0344  Tc 0  Tw ($D) Tj29.88 0  TD 0.0106  Tc 0.0194  Tw (disable breakpoints) Tj-29.4 -11.52  TD 0.0472  Tc 0  Tw ($E) Tj29.4 0  TD 0.0077  Tc 0.0223  Tw (enable breakpoints) Tj-29.04 -11.52  TD 0.0811  Tc 0  Tw ($S) Tj29.04 0  TD 0.0081  Tc 0.0219  Tw (set a breakpoint) Tj57.84 -25.08  TD /F0 12  Tf0  Tc -0  Tw (Miscellaneous Commands) Tj-83.28 -11.76  TD /F2 9.96  Tf0.0433  Tc 0  Tw (I) Tj25.44 0  TD -0.0042  Tc 0.0942  Tw (display ID message) Tj-27.36 -11.52  TD 0.0089  Tc 0  Tw (Q) Tj27.36 0  TD 0.0085  Tc 0.0215  Tw (exit simulator) Tj-26.76 -11.4  TD 0.0344  Tc 0  Tw (L) Tj26.76 0  TD 0.0092  Tc 0.0208  Tw (load an object file) Tj-27.36 -11.52  TD 0.0089  Tc 0  Tw (U) Tj27.36 0  TD -0  Tc 0.0906  Tw (upload \(dump\) memory to file) Tj-29.04 -11.52  TD -0.0939  Tc 0  Tw (!D) Tj29.04 0  TD 0.0032  Tc 0.0568  Tw (set memory space to Data) Tj-27.12 -11.52  TD -0.0767  Tc 0  Tw (!I) Tj27.12 0  TD 0.0037  Tc 0.0563  Tw (set memory space to I/O) Tj-28.2 -11.52  TD -0.0472  Tc 0  Tw (!P) Tj28.2 0  TD 0.0228  Tc 0.0372  Tw (set memory space to Program) Tj-27.36 -11.52  TD 0.0089  Tc 0  Tw (H) Tj27.36 0  TD -0.0062  Tc 0.0962  Tw (display this message) TjETendstream
endobj
63 0 obj
4068
endobj
61 0 obj
<<
/Type /Page
/Parent 55 0 R
/Resources <<
/Font <<
/F0 6 0 R 
/F2 14 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 62 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F0
/BaseFont /TimesNewRoman,Bold
/FirstChar 31
/LastChar 255
/Widths [ 778 250 333 555 500 500 1000 833 278 333 333 500 570 250 333 250 
278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 
500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 
778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 
500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 
500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 
778 778 778 333 500 500 1000 500 500 333 1000 556 333 1000 778 778 
778 778 333 333 500 500 350 500 1000 333 1000 389 333 722 778 778 
722 250 333 500 500 500 500 220 500 333 747 300 500 570 333 747 
500 400 549 300 300 333 576 540 250 333 300 330 500 750 750 750 
500 722 722 722 722 722 722 1000 722 667 667 667 667 389 389 389 
389 722 722 778 778 778 778 778 570 778 722 722 722 722 722 611 
556 500 500 500 500 500 500 722 444 444 444 444 444 278 278 278 
278 500 556 500 500 500 500 500 549 500 556 556 556 556 500 556 
500 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 7 0 R
>>
endobj
7 0 obj
<<
/Type /FontDescriptor
/FontName /TimesNewRoman,Bold
/Flags 16418
/FontBBox [ -250 -217 1200 890 ]
/MissingWidth 777
/StemV 136
/StemH 136
/ItalicAngle 0
/CapHeight 890
/XHeight 623
/Ascent 890
/Descent -217
/Leading 150
/MaxWidth 1000
/AvgWidth 427
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F1
/BaseFont /TimesNewRoman,Italic
/FirstChar 31
/LastChar 255
/Widths [ 778 250 333 420 500 500 833 778 214 333 333 500 675 250 333 250 
278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 
500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 
722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 
500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 
500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 
778 778 778 333 500 556 889 500 500 333 1000 500 333 944 778 778 
778 778 333 333 556 556 350 500 889 333 980 389 333 667 778 778 
556 250 389 500 500 500 500 275 500 333 760 276 500 675 333 760 
500 400 549 300 300 333 576 523 250 333 300 310 500 750 750 750 
500 611 611 611 611 611 611 889 667 611 611 611 611 333 333 333 
333 722 667 722 722 722 722 722 675 722 722 722 722 722 556 611 
500 500 500 500 500 500 500 667 444 444 444 444 444 278 278 278 
278 500 500 500 500 500 500 500 549 500 500 500 500 500 444 500 
444 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 9 0 R
>>
endobj
9 0 obj
<<
/Type /FontDescriptor
/FontName /TimesNewRoman,Italic
/Flags 98
/FontBBox [ -250 -241 1182 895 ]
/MissingWidth 774
/StemV 73
/StemH 73
/ItalicAngle -11
/CapHeight 895
/XHeight 626
/Ascent 895
/Descent -241
/Leading 180
/MaxWidth 985
/AvgWidth 398
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F2
/BaseFont /TimesNewRoman
/FirstChar 31
/LastChar 255
/Widths [ 778 250 333 408 500 500 833 778 180 333 333 500 564 250 333 250 
278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 
444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 
722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 
500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 
500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 
778 778 778 333 500 444 1000 500 500 333 1000 556 333 889 778 778 
778 778 333 333 444 444 350 500 1000 333 980 389 333 722 778 778 
722 250 333 500 500 500 500 200 500 333 760 276 500 564 333 760 
500 400 549 300 300 333 576 453 250 333 300 310 500 750 750 750 
444 722 722 722 722 722 722 889 667 611 611 611 611 333 333 333 
333 722 722 722 722 722 722 722 564 722 722 722 722 722 722 556 
500 444 444 444 444 444 444 667 444 444 444 444 444 278 278 278 
278 500 500 500 500 500 500 500 549 500 500 500 500 500 500 500 
500 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 15 0 R
>>
endobj
15 0 obj
<<
/Type /FontDescriptor
/FontName /TimesNewRoman
/Flags 34
/FontBBox [ -250 -241 1200 892 ]
/MissingWidth 783
/StemV 73
/StemH 73
/ItalicAngle 0
/CapHeight 892
/XHeight 624
/Ascent 892
/Descent -241
/Leading 181
/MaxWidth 1000
/AvgWidth 398
>>
endobj
21 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F3
/BaseFont /Arial
/FirstChar 31
/LastChar 255
/Widths [ 750 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 
278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 
556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 
778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 
556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 
556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 
750 750 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 750 
750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 750 
667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 
552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 
611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 
278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 
611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 
278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 
500 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 22 0 R
>>
endobj
22 0 obj
<<
/Type /FontDescriptor
/FontName /Arial
/Flags 32
/FontBBox [ -250 -217 1214 892 ]
/MissingWidth 747
/StemV 81
/StemH 81
/ItalicAngle 0
/CapHeight 892
/XHeight 624
/Ascent 892
/Descent -217
/Leading 144
/MaxWidth 1012
/AvgWidth 446
>>
endobj
23 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F4
/BaseFont /CourierNew,Bold
/FirstChar 31
/LastChar 255
/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 24 0 R
>>
endobj
24 0 obj
<<
/Type /FontDescriptor
/FontName /CourierNew,Bold
/Flags 16419
/FontBBox [ -250 -301 722 807 ]
/MissingWidth 602
/StemV 192
/StemH 192
/ItalicAngle 0
/CapHeight 807
/XHeight 564
/Ascent 807
/Descent -301
/Leading 108
/MaxWidth 602
/AvgWidth 602
>>
endobj
28 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F5
/BaseFont /CourierNew
/FirstChar 31
/LastChar 255
/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 29 0 R
>>
endobj
29 0 obj
<<
/Type /FontDescriptor
/FontName /CourierNew
/Flags 35
/FontBBox [ -250 -277 722 783 ]
/MissingWidth 602
/StemV 110
/StemH 110
/ItalicAngle 0
/CapHeight 783
/XHeight 548
/Ascent 783
/Descent -277
/Leading 60
/MaxWidth 602
/AvgWidth 602
>>
endobj
30 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F6
/BaseFont /CourierNew,Italic
/FirstChar 31
/LastChar 255
/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 ]
/Encoding /WinAnsiEncoding
/FontDescriptor 31 0 R
>>
endobj
31 0 obj
<<
/Type /FontDescriptor
/FontName /CourierNew,Italic
/Flags 99
/FontBBox [ -250 -265 722 831 ]
/MissingWidth 602
/StemV 110
/StemH 110
/ItalicAngle -11
/CapHeight 831
/XHeight 581
/Ascent 831
/Descent -265
/Leading 96
/MaxWidth 602
/AvgWidth 602
>>
endobj
2 0 obj
[ /PDF /Text  ]
endobj
5 0 obj
<<
/Kids [4 0 R 12 0 R 13 0 R 18 0 R 25 0 R 32 0 R ]
/Count 6
/Type /Pages
/Parent 64 0 R
>>
endobj
36 0 obj
<<
/Kids [35 0 R 39 0 R 42 0 R 45 0 R 48 0 R 51 0 R ]
/Count 6
/Type /Pages
/Parent 64 0 R
>>
endobj
55 0 obj
<<
/Kids [54 0 R 58 0 R 61 0 R ]
/Count 3
/Type /Pages
/Parent 64 0 R
>>
endobj
64 0 obj
<<
/Kids [5 0 R 36 0 R 55 0 R ]
/Count 15
/Type /Pages
/MediaBox [ 0 0 612 792 ]
>>
endobj
1 0 obj
<<
/Creator <FEFF004D006900630072006F0073006F0066007400200057006F007200640020>
/CreationDate (D:20180206061941)
/Title <FEFF006D0061006E00750061006C002E005000440046>
/Author <FEFF0067006C0065006E>
/Producer (Acrobat PDFWriter 4.0 for Windows)
>>
endobj
3 0 obj
<<
/Pages 64 0 R
/Type /Catalog
/DefaultGray 65 0 R
/DefaultRGB  66 0 R
>>
endobj
65 0 obj
[/CalGray
<<
/WhitePoint [0.9643 1 0.8251 ]
/Gamma 1.9 
>>
]
endobj
66 0 obj
[/CalRGB
<<
/WhitePoint [0.9643 1 0.8251 ]
/Gamma [1.9 1.9 1.9 ]
/Matrix [0.511 0.2903 0.0273 0.3264 0.6499 0.1279 0.1268 0.0598 0.6699 ]
>>
]
endobj
xref
0 67
0000000000 65535 f
0000080746 00000 n
0000080273 00000 n
0000081016 00000 n
0000000359 00000 n
0000080307 00000 n
0000070444 00000 n
0000071574 00000 n
0000071863 00000 n
0000072988 00000 n
0000000021 00000 n
0000000336 00000 n
0000000503 00000 n
0000002491 00000 n
0000073275 00000 n
0000074397 00000 n
0000000592 00000 n
0000002467 00000 n
0000009948 00000 n
0000002625 00000 n
0000009924 00000 n
0000074677 00000 n
0000075795 00000 n
0000076067 00000 n
0000077188 00000 n
0000019033 00000 n
0000010120 00000 n
0000019009 00000 n
0000077473 00000 n
0000078589 00000 n
0000078865 00000 n
0000079988 00000 n
0000027104 00000 n
0000019206 00000 n
0000027080 00000 n
0000033845 00000 n
0000080423 00000 n
0000027277 00000 n
0000033821 00000 n
0000041322 00000 n
0000034019 00000 n
0000041298 00000 n
0000047813 00000 n
0000041496 00000 n
0000047789 00000 n
0000053567 00000 n
0000047987 00000 n
0000053543 00000 n
0000056253 00000 n
0000053741 00000 n
0000056229 00000 n
0000058966 00000 n
0000056401 00000 n
0000058942 00000 n
0000063159 00000 n
0000080541 00000 n
0000059101 00000 n
0000063135 00000 n
0000065996 00000 n
0000063294 00000 n
0000065972 00000 n
0000070297 00000 n
0000066144 00000 n
0000070273 00000 n
0000080638 00000 n
0000081114 00000 n
0000081199 00000 n
trailer
<<
/Size 67
/Root 3 0 R
/Info 1 0 R
/ID [<323c11cc500828f246e26a791899dcfe><323c11cc500828f246e26a791899dcfe>]
>>
startxref
81367
%%EOF
