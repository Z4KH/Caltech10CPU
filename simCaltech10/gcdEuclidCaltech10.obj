; Zachary Pestrikov EE/CS10a HW 5
; This routine computes the greatest common divisor of two numbers, a and b 
; This routine implements Euclid's Subtraction Algorithm into the Caltech10 CPU
; It is an O(2^n) Algorithm
; 8-bit Values a and b are stored in memory, and the GCD of the two values are returned
;
; Revision History:
;    2/10/2024   Zachary Pestrikov   Wrote Code for GCD Computing Program


;0000    start:              ;initialize
0000 8001;    LDD b
0001 3300;    CMPI $0         ;compare b to 0
0002 9F19;    JZ  DONE            ;if b is 0, gcd is just a
0003 1F80;    NOP
0004 8000;    LDD a           ; load a
0005 C007;    JMP COMPARISON  ;compare a and b
0006 1F80;    NOP

;0007 COMPARISON:         ;compares a and b
0007 3001;    CMP b           ;compare a and b
0008 BB02;    JGE WHILE       ;if a>=b, go to loop
0009 B80C;    JL SWAP     ;swap if a<b
000A 1F80;     NOP

;000B WHILE:              ;loop through while b is at most a
000B 1001;    SUB b           ;subtracts b from a
000C A000;    STD a         ;store a
000D C007;    JMP COMPARISON  ;jump back to comparison
000E 1F80;    NOP

;000F ENDWHILE:           ;determines whether to go back to while loop
000F 8001;    LDD b           ;get b
0010 3300;    CMPI $0       ;compare b to 0
0011 9F0A;    JZ DONE         ;if b is 0, algorithm done
0012 1F80;    NOP
0013 8000;    LDD a           ;load a
0014 C007;    JMP COMPARISON       ;if not 0, continue with loop
0015 1F80;    NOP
    

;0016 SWAP                ;swap a and b
0016 0780;	TAX			    ;put a in X temporariliy
0017 8001;	LDD   b 		;gets b
0018 A000;	STD   a		    ;stores b in a
0019 6701;	TXA			    ;get a back
001A A001;	STD   b	    	;store a in b
001B C00F;  JMP ENDWHILE    ;go to ENDWHILE

;001C DONE:               ;output GCD
001C 8000;    LDD a           ;load a
001D 1F00;    RTS             ;return




;Variables
;00  ??  a   DB  ?   ;the variable a 
;01  ??  b   DB  ?   ;the variable b 



    

